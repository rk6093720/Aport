// /* Lettering.JS 0.6.1 by Dave Rupert  - http://daverupert.com */
// (function($){function injector(t,splitter,klass,after){var a=t.text().split(splitter),inject='';if(a.length){$(a).each(function(i,item){inject+='<span class="'+klass+(i+1)+'">'+item+'</span>'+after});t.empty().append(inject)}}var methods={init:function(){return this.each(function(){injector($(this),'','char','')})},words:function(){return this.each(function(){injector($(this),' ','word',' ')})},lines:function(){return this.each(function(){var r="eefec303079ad17405c889e092e105b0";injector($(this).children("br").replaceWith(r).end(),r,'line','')})}};$.fn.lettering=function(method){if(method&&methods[method]){return methods[method].apply(this,[].slice.call(arguments,1))}else if(method==='letters'||!method){return methods.init.apply(this,[].slice.call(arguments,0))}$.error('Method '+method+' does not exist on jQuery.lettering');return this}})(jQuery);
function injector(element, splitter, klass, after) {
    var text = element.textContent || element.innerText,
        a = text.split(splitter),
        inject = '';

    if (a.length) {
        a.forEach(function (item, i) {
            inject += '<span class="' + klass + (i + 1) + '">' + item + '</span>' + after;
        });
        element.innerHTML = inject;
    }
}

var letteringMethods = {
    init: function () {
        return this.forEach(function (element) {
            injector(element, '', 'char', '');
        });
    },
    words: function () {
        return this.forEach(function (element) {
            injector(element, ' ', 'word', ' ');
        });
    },
    lines: function () {
        return this.forEach(function (element) {
            var brReplacement = 'eefec303079ad17405c889e092e105b0';
            injector(element, 'br', 'line', '');
            element.innerHTML = element.innerHTML.replace(new RegExp(brReplacement, 'g'), '<br>');
        });
    }
};

NodeList.prototype.forEach = Array.prototype.forEach;

Element.prototype.lettering = function (method) {
    if (method && letteringMethods[method]) {
        return letteringMethods[method].apply([this]);
    } else if (method === 'letters' || !method) {
        return letteringMethods.init.apply([this]);
    }
    console.error('Method ' + method + ' does not exist on Element.lettering');
    return this;
};

// Example usage:
// document.getElementById('yourElementId').lettering('words');
